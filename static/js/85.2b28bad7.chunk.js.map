{"version":3,"file":"static/js/85.2b28bad7.chunk.js","mappings":"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","sources":["api.js","components/Loader/Loader.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","webpack://react-homework-template/./src/components/Return/Return.module.css?5353","components/Return/Return.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a8e6047ebc6d4087c1e6648e8f96688b';\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=1`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchTrailerMovies = movieId => {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}`)\n    .then(resp => resp.data.results);\n};\n","import { Vortex } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Vortex\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"vortex-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"vortex-wrapper\"\n      colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"columnImg\":\"MovieDetails_columnImg__9BJFf\",\"detalisImg\":\"MovieDetails_detalisImg__ihS2c\",\"info\":\"MovieDetails_info__qv2SI\",\"list\":\"MovieDetails_list__dbNMP\",\"item\":\"MovieDetails_item__mbUY+\",\"link\":\"MovieDetails_link__U+v+7\",\"score\":\"MovieDetails_score__p8Kk2\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"videoBackdrop\":\"MovieDetails_videoBackdrop__Jk9jD\",\"iconBackModal\":\"MovieDetails_iconBackModal__-BFM8\",\"videoModal\":\"MovieDetails_videoModal__Qa93g\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Return_button__YIiV3\"};","import { Link } from 'react-router-dom';\nimport s from 'components/Return/Return.module.css';\n\nexport const Return = ({ to }) => {\n  return (\n    <Link to={to}>\n      {' '}\n      <button className={s.button} type=\"button\">\n        {' '}\n        Return\n      </button>{' '}\n    </Link>\n  );\n};\n","import { fetchMovieDetails } from 'api';\nimport { Outlet, useParams, useLocation, Link } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport s from 'pages/MovieDetails/MovieDetails.module.css';\nimport Loader from 'components/Loader/Loader';\nimport { Return } from 'components/Return/Return';\nimport { toast } from 'react-toastify';\nimport { fetchTrailerMovies } from 'api';\nimport YouTube from 'react-youtube';\nimport { GiExitDoor } from 'react-icons/gi';\n\nconst MovieDetails = () => {\n  const [movieDetail, setMovieDetail] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? `/movie`;\n  const [trailerId, setTrailerId] = useState(null);\n  const [urlModal, setUrlModal] = useState(false);\n\n  function handleFetchTrailer() {\n    fetchTrailerMovies(movieId).then(videos => {\n      const trailer = videos.find(video => video.type === 'Trailer');\n      if (trailer) {\n        setTrailerId(trailer.key);\n        setUrlModal(true);\n        document.body.style.overflow = 'hidden';\n      } else {\n        setUrlModal(false);\n        toast.error('No trailer for this movie.');\n      }\n    });\n  }\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(resp => {\n      setMovieDetail(resp);\n    });\n  }, [movieId]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', clickKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', clickKeyDown);\n    };\n  });\n\n  function closeModal() {\n    setUrlModal(false);\n    setTrailerId(null);\n    document.body.style.overflow = 'auto';\n  }\n\n  const clickBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  const clickKeyDown = e => {\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  const { poster_path, title, vote_average, overview, genres } = movieDetail;\n  const score = ((vote_average * 10) / 10).toFixed(1);\n\n  return (\n    <>\n      <Return to={backLinkHref} />\n      <div>\n        <div className={s.wrapper}>\n          <div className={s.columnImg}>\n            <img\n              src={\n                poster_path ? (\n                  `https://image.tmdb.org/t/p/w500/${poster_path}`\n                ) : (\n                  <p></p>\n                )\n              }\n              alt={title ? title : 'Movie without a title'}\n              width={300}\n              className={s.detalisImg}\n              style={{ cursor: 'pointer' }}\n              onClick={handleFetchTrailer}\n            />\n            {urlModal && trailerId ? (\n              <div className={s.videoBackdrop} onClick={clickBackdrop}>\n                <GiExitDoor className={s.iconBackModal} onClick={closeModal} />\n\n                <YouTube\n                  className={s.videoModal}\n                  videoId={trailerId}\n                  opts={{\n                    width: '100%',\n                    height: '100%',\n                    playerVars: {\n                      autoplay: 1,\n                      controls: 1,\n                      cc_load_policy: 0,\n                      fs: 0,\n                      iv_load_policy: 0,\n                      modestbranding: 0,\n                      rel: 0,\n                      showinfo: 0,\n                    },\n                    origin: 'http://localhost:3000',\n                  }}\n                />\n              </div>\n            ) : (\n              <p></p>\n            )}\n          </div>\n\n          <div className={s.info}>\n            <h1>{title}</h1>\n            <p className={s.score}>\n              User Score: <span>{score}</span>\n            </p>\n            <span>{overview}</span>\n            <p className={s.genres}>Genres:</p>\n            {genres && (\n              <span>{genres.map(genre => genre.name).join(' || ')}</span>\n            )}\n          </div>\n        </div>\n\n        <ul className={s.list}>\n          <li className={s.item}>\n            <Link className={s.link} to=\"cast\" state={{ ...location.state }}>\n              Cast\n            </Link>\n          </li>\n          <li className={s.item}>\n            <Link className={s.link} to=\"reviews\" state={{ ...location.state }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["BASE_URL","API_KEY","fetchSearchMovies","query","axios","resp","data","console","error","message","fetchTrendingMovies","fetchMovieDetails","id","fetchMovieCast","fetchMovieReviews","fetchTrailerMovies","movieId","then","results","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Return","to","className","s","type","useState","movieDetail","setMovieDetail","useParams","location","useLocation","backLinkHref","state","from","trailerId","setTrailerId","urlModal","setUrlModal","closeModal","document","body","style","overflow","useEffect","window","addEventListener","clickKeyDown","removeEventListener","e","code","poster_path","title","vote_average","overview","genres","score","toFixed","src","alt","cursor","onClick","videos","trailer","find","video","key","toast","currentTarget","target","videoId","opts","playerVars","autoplay","controls","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo","origin","map","genre","name","join","Suspense","fallback","Loader"],"sourceRoot":""}