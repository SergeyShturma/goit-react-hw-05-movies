{"version":3,"file":"static/js/765.1a102574.chunk.js","mappings":"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","sources":["api.js","components/Loader/Loader.js","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a8e6047ebc6d4087c1e6648e8f96688b';\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=1`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchTrailerMovies = movieId => {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}`)\n    .then(resp => resp.data.results);\n};\n","import { Vortex } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Vortex\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"vortex-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"vortex-wrapper\"\n      colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"link\":\"MoviesList_link__8rTGX\",\"item\":\"MoviesList_item__eePYv\",\"title\":\"MoviesList_title__PB2c8\"};","import PropTypes from 'prop-types';\nimport { Outlet, useLocation, Link } from 'react-router-dom';\nimport s from 'components/MoviesList/MoviesList.module.css';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul className={s.list}>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <li className={s.item} key={id}>\n              <Link\n                className={s.link}\n                to={`/movies/${id}`}\n                state={{ from: location }}\n              >\n                <img\n                  src={\n                    poster_path\n                      ? 'https://image.tmdb.org/t/p/w500' + poster_path\n                      : 'https://via.placeholder.com/960x240'\n                  }\n                  alt=\"movie\"\n                  width=\"250\"\n                />\n                <p className={s.title}>{title}</p>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Movies_main__zVRJ-\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBar_wrapper__KGK67\",\"form\":\"SearchBar_form__gW7Gj\",\"input\":\"SearchBar_input__bIy50\",\"button\":\"SearchBar_button__T7RTc\",\"button_label\":\"SearchBar_button_label__PbnEv\"};","import { useState } from 'react';\nimport s from 'components/SearchBar/SearchBar.module.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const queryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast('Пустоту искать не очень интересно!');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  // const toastInfoDuplication = () => {\n  //   return toast.info('You are already here!');\n  // };\n\n  return (\n    <div className={s.wrapper}>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.button_label}>Search</span>\n        </button>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"query\"\n          value={query}\n          autoComplete=\"off\"\n          placeholder=\"Search movies\"\n          onChange={queryChange}\n        />\n      </form>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { fetchSearchMovies } from 'api';\nimport s from 'pages/Movies/Movies.module.css';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { MovieList } from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const nameMovie = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setMovies([]);\n    setLoading(true);\n\n    fetchSearchMovies(nameMovie)\n      .then(resp => {\n        // resp.results\n        //   ? setMovies(resp.results)\n        //   : toast.error('Better luck next time!');\n\n        setMovies(resp.results);\n        // if (!resp.length) {\n        //   toast.error('Better luck next time!');\n        // }\n      })\n      .catch(error => setError(error))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [nameMovie]);\n\n  const handleSubmit = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main className={s.main}>\n      {error && <h2>{error.message}</h2>}\n      <SearchBar onSubmit={handleSubmit} />\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {loading && <Loader />}\n      <ToastContainer autoClose={2000} />\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchSearchMovies","query","axios","resp","data","console","error","message","fetchTrendingMovies","fetchMovieDetails","id","fetchMovieCast","fetchMovieReviews","fetchTrailerMovies","movieId","then","results","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","MovieList","movies","location","useLocation","className","s","map","title","poster_path","to","state","from","src","alt","Suspense","fallback","Loader","SearchBar","onSubmit","useState","setQuery","e","preventDefault","trim","toast","type","name","value","autoComplete","placeholder","onChange","currentTarget","toLowerCase","useSearchParams","searchParams","setSearchParams","nameMovie","get","setMovies","loading","setLoading","setError","useEffect","catch","finally","length","autoClose"],"sourceRoot":""}