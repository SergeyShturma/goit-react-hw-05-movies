{"version":3,"file":"static/js/900.58a293d4.chunk.js","mappings":"2UAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAiB,mCAAG,WAAMC,GAAN,gGAEVC,EAAAA,EAAAA,IAAA,UACdJ,EADc,iCACmBC,EADnB,iCACmDE,EADnD,gCAFU,cAEvBE,EAFuB,yBAKtBA,EAAKC,MALiB,gCAO7BC,QAAQC,MAAM,KAAMC,SAPS,yDAAH,sDAWjBC,EAAmB,mCAAG,6GAEZN,EAAAA,EAAAA,IAAA,UACdJ,EADc,wCAC0BC,EAD1B,YAFY,cAEzBI,EAFyB,yBAKxBA,EAAKC,MALmB,gCAO/BC,QAAQC,MAAM,KAAMC,SAPW,yDAAH,qDAWnBE,EAAiB,mCAAG,WAAMC,GAAN,gGAEVR,EAAAA,EAAAA,IAAA,UACdJ,EADc,kBACIY,EADJ,oBACkBX,EADlB,oBAFU,cAEvBI,EAFuB,yBAKtBA,EAAKC,MALiB,gCAO7BC,QAAQC,MAAM,KAAMC,SAPS,yDAAH,sDAWjBI,EAAc,mCAAG,WAAMD,GAAN,gGAEPR,EAAAA,EAAAA,IAAA,UACdJ,EADc,kBACIY,EADJ,4BAC0BX,EAD1B,oBAFO,cAEpBI,EAFoB,yBAKnBA,EAAKC,MALc,gCAO1BC,QAAQC,MAAM,KAAMC,SAPM,yDAAH,sDAWdK,EAAiB,mCAAG,WAAMF,GAAN,gGAEVR,EAAAA,EAAAA,IAAA,UACdJ,EADc,kBACIY,EADJ,4BAC0BX,EAD1B,oBAFU,cAEvBI,EAFuB,yBAKtBA,EAAKC,MALiB,gCAO7BC,QAAQC,MAAM,KAAMC,SAPS,yDAAH,sDAWjBM,EAAqB,SAAAC,GAChC,OAAOZ,EAAAA,EAAAA,IAAA,UACGJ,EADH,kBACqBgB,EADrB,2BAC+Cf,IACnDgB,MAAK,SAAAZ,GAAI,OAAIA,EAAKC,KAAKY,OAAd,GACb,C,yHC/DD,EAA0B,sBAA1B,EAA4D,wBAA5D,EAAgG,wB,SC2ChG,EAtCa,WACX,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQL,GAAYM,EAAAA,EAAAA,MAAZN,QAQR,OANAO,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAeG,GAASC,MAAK,SAAAZ,GAC3BgB,EAAahB,EAAKmB,KACnB,GACF,GAAE,CAACR,KAGF,gBAAKS,UAAWC,EAAhB,SACGN,EAAUO,OAAS,EAClBP,EAAUQ,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACZ,iBAAKN,UAAWC,EAAhB,UACGG,GACC,gBACEG,IAAG,yCAAoCH,GACvCI,IAAKH,EACLI,MAAO,OAGT,SAAC,MAAD,CAAYC,KAAM,OAEpB,yBACG,KACD,uBAAIL,IAAU,QAEhB,eAAGL,UAAWC,EAAd,yBAAwCK,OAdRnB,EADtB,KAmBd,wDAIP,C","sources":["api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a8e6047ebc6d4087c1e6648e8f96688b';\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=1`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchTrailerMovies = movieId => {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}/videos?api_key=${API_KEY}`)\n    .then(resp => resp.data.results);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__XmIBi\",\"container\":\"Cast_container__iz+ye\",\"character\":\"Cast_character__tKDlA\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'api';\nimport { CiImageOff } from 'react-icons/ci';\nimport s from 'components/Cast/Cast.module.css';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(resp => {\n      setMovieCast(resp.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <div className={s.wrapper}>\n      {movieCast.length > 0 ? (\n        movieCast.map(({ id, profile_path, name, character }) => (\n          <div className={s.container} key={id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n                width={100}\n              />\n            ) : (\n              <CiImageOff size={125} />\n            )}\n            <p>\n              {' '}\n              <b>{name}</b>{' '}\n            </p>\n            <p className={s.character}> Character: {character}</p>\n          </div>\n        ))\n      ) : (\n        <p>Sorry, there isn't any info</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","fetchSearchMovies","query","axios","resp","data","console","error","message","fetchTrendingMovies","fetchMovieDetails","id","fetchMovieCast","fetchMovieReviews","fetchTrailerMovies","movieId","then","results","useState","movieCast","setMovieCast","useParams","useEffect","cast","className","s","length","map","profile_path","name","character","src","alt","width","size"],"sourceRoot":""}